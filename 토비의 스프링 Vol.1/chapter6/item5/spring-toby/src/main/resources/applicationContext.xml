<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
    <!-- aop 네임스페이스를 적용한 AOP 설정 빈 >
    <aop:config>
        <aop:pointcut id="transactionPointcut"
                      expression="execution(* *..*ServiceImpl.upgrade*(..))"/>
        <aop:advisor advice-ref="transactionAdvice" pointcut-ref="transactionPointcut"/>
    </aop:config -->
    <!-- 포인트컷을 내장한 어드바이저 태그 -->
    <aop:config>
        <aop:advisor advice-ref="transactionAdvice"
                     pointcut="execution(* *..*ServiceImpl.upgrade*(..))"/>
    </aop:config>
    <!-- 트랜잭션 어드바이스 빈 설정 -->
    <bean id="transactionAdvice" class="com.gaga.springtoby.user.service.TransactionAdvice">
        <property name="transactionManager" ref="transactionManager"/>
    </bean>
    <!-- 자동 프록시 생성기인 DefaultAdvisorAutoProxyCreator 등록 >
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>
    < 직접 만든 포인트컷 빈 설정 제거 >
    <bean id="transactionPointcut" class="org.springframework.aop.support.NameMatchMethodPointcut">
    <bean id="transactionPointcut" class="com.gaga.springtoby.proxy.NameMatchClassMethodPointcut">
        <property name="mappedClassName" value="*NotServiceImpl"/>
        <property name="mappedClassName" value="*ServiceImpl"/>
        <property name="mappedName" value="upgrade*"/>
    </bean>
    < 포인트컷 표현식을 사용한 빈 설정 >
    <bean id="transactionPointcut" class="org.springframework.aop.aspectj.AspectJExpressionPointcut">
        <property name="expression" value="execution(* *..*ServiceImpl.upgrade*(..))"/>
    </bean>
    < 어드바이저 빈 설정 >
    <bean id="transactionAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
        <property name="advice" ref="transactionAdvice"/>
        <property name="pointcut" ref="transactionPointcut"/>
    </bean>
    < ProxyFactoryBean을 제거 >
    <bean id="userService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="userServiceImpl"/>
        <property name="interceptorNames">
            <list>
                <value>transactionAdvisor</value>
            </list>
        </property>
    </bean -->
    <bean id="userService" class="com.gaga.springtoby.user.service.UserServiceImpl">
        <property name="userDao" ref="userDao"/>
        <property name="mailSender" ref="mailSender"/>
    </bean>
    <!-- bean id="userServiceImpl" class="com.gaga.springtoby.user.service.UserServiceImpl">
        <property name="userDao" ref="userDao"/>
        <property name="mailSender" ref="mailSender"/>
    </bean -->
    <!-- 테스트용 UserService의 등록 -->
    <bean id="testUserService"
          class="com.gaga.springtoby.user.service.UserServiceTest$TestUserServiceImpl"
          parent="userService"/>
    <bean id="userDao" class="com.gaga.springtoby.user.dao.UserDaoJdbc">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <bean id="mailSender" class="com.gaga.springtoby.user.service.DummyMailSender"/>
    <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <property name="driverClass" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost/toby"/>
        <property name="username" value="toby"/>
        <property name="password" value="gaga"/>
    </bean>
</beans>